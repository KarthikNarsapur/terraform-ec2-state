name: destroy-ec2

on:
  workflow_dispatch:
    inputs:
      region:
          description: 'AWS Region'
          required: true
      instanceId:
          description: 'Instance ID'
          required: true
      instanceState:
          description: 'Instance state (Stop/Start/Terminate)'
          required: true

permissions:
  id-token: write
  contents: read

jobs: 
  ec2-instance-stop:
    runs-on: ubuntu-latest

    if: ${{ github.event.inputs.instanceState == 'stopped' }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    
    - name: Assume AWS Role using OIDC
      uses: aws-actions/configure-aws-credentials@v1.7.0
      with:
        role-to-assume: arn:aws:iam::730335384723:role/backstage_interns_project
        role-session-name: GitHub_to_AWS_via_FederatedOIDC
        aws-region: ${{ github.event.inputs.region }}
        
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Terraform Init
      run: terraform init
      
    - name: Terraform Validate
      run: terraform validate
     
    - name: Terraform Apply
      run: terraform apply -var instanceId=${{ github.event.inputs.instanceId }} -var region=${{ github.event.inputs.region }} -var instanceState=${{ github.event.inputs.instanceState }} -auto-approve

  ec2-instance-start:
    runs-on: ubuntu-latest

    if: ${{ github.event.inputs.instanceState == 'running' }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    
    - name: Assume AWS Role using OIDC
      uses: aws-actions/configure-aws-credentials@v1.7.0
      with:
        role-to-assume: arn:aws:iam::730335384723:role/backstage_interns_project
        role-session-name: GitHub_to_AWS_via_FederatedOIDC
        aws-region: ${{ github.event.inputs.region }}
        
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Terraform Init
      run: terraform init
      
    - name: Terraform Validate
      run: terraform validate
     
    - name: Terraform Apply
      run: terraform apply -var instanceId=${{ github.event.inputs.instanceId }} -var region=${{ github.event.inputs.region }} -var instanceState=${{ github.event.inputs.instanceState }} -auto-approve
